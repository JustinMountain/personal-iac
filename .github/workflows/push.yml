name: Push

on:
  push:
    branches:
      - main

env:
  TF_LOG: INFO

permissions:
      id-token: write
      contents: read

jobs: 
  deploy-infra:
    name: Deploy Personal Infrastructure to Azure
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Install the Terraform CLI
        uses: hashicorp/setup-terraform@v2
      -
        name: Install Ansible
        shell: bash
        run: |
          sudo apt update
          sudo apt install -y ansible
      -
        name: "Print Ansible version"
        run: ansible-playbook --version
      -
        name: Install geerlingguy.docker role
        run: ansible-galaxy role install geerlingguy.docker
      -
        name: Install community.general collection
        run: ansible-galaxy collection install community.general
      -
        name: Install cloud.terraform collection
        run: ansible-galaxy collection install cloud.terraform
      -
        name: Install azure.azcollection collection
        run: ansible-galaxy collection install azure.azcollection
      -
        name: Log into Azure with OIDC integration
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      -
        name: Show account info to confirm access
        run: |
          az account show
      -
        name: Generate Public SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keygen -y -f ~/.ssh/id_rsa > ~/.ssh/id_rsa.pub
      -
        name: Terraform Init
        id: init
        env:
          STORAGE_ACCOUNT: ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}
          CONTAINER_NAME: ${{ secrets.AZURE_STORAGE_CONTAINER_NAME }}
          RESOURCE_GROUP_NAME: ${{ secrets.AZURE_STORAGE_RESOURCE_GROUP_NAME }}
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        run: terraform init -upgrade -backend-config="storage_account_name=$STORAGE_ACCOUNT" -backend-config="container_name=$CONTAINER_NAME" -backend-config="resource_group_name=$RESOURCE_GROUP_NAME"
      -
      #   name: Terraform Unlock
      #   id: Unlock
      #   env:
      #     STORAGE_ACCOUNT: ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}
      #     CONTAINER_NAME: ${{ secrets.AZURE_STORAGE_CONTAINER_NAME }}
      #     RESOURCE_GROUP_NAME: ${{ secrets.AZURE_STORAGE_RESOURCE_GROUP_NAME }}
      #     ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      #     ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      #     ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      #   run: terraform force-unlock -force 43ce27ff-bb99-03e4-eb68-aad316b32f3f
      # -
        name: Terraform format
        id: fmt
        run: terraform fmt -check
      -
        name: Terraform validate
        id: validate
        if: success() || failure()
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        run: terraform validate -no-color
      -
        name: Terraform apply
        id: apply
        env:
          TF_VAR_storage_account_name: ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}
          TF_VAR_container_name: ${{ secrets.AZURE_STORAGE_CONTAINER_NAME }}
          TF_VAR_storage_resource_group_name: ${{ secrets.AZURE_STORAGE_RESOURCE_GROUP_NAME }}
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        run: |
          terraform apply -auto-approve \
            -var="vm_ssh_public_key=$(cat ~/.ssh/id_rsa.pub)" \
            -var="ssh_private_key_content=${{ secrets.SSH_PRIVATE_KEY }}"
      # -
      #   name: Terraform destroy
      #   id: destroy
      #   env:
      #     TF_VAR_storage_account_name: ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}
      #     TF_VAR_container_name: ${{ secrets.AZURE_STORAGE_CONTAINER_NAME }}
      #     TF_VAR_storage_resource_group_name: ${{ secrets.AZURE_STORAGE_RESOURCE_GROUP_NAME }}
      #     ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      #     ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      #     ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      #   run: |
      #     terraform apply -destroy -auto-approve \
      #       -var="vm_ssh_public_key=$(cat ~/.ssh/id_rsa.pub)" \
      #       -var="ssh_private_key_content=${{ secrets.SSH_PRIVATE_KEY }}"
